import "@/app/globals.css";
import { routing } from "@/shared/config/i18n/routing";
import type { Metadata } from "next";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { Geist } from "next/font/google";
import { notFound } from "next/navigation";
import { ThemeProvider } from "./_providers/theme";
import { TRPCProvider } from "./_providers/trpc/root";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
	params,
}: Readonly<{
	children: React.ReactNode;
	params: Promise<{ locale: string }>;
}>) {
	// Ensure that the incoming `locale` is valid
	const { locale } = await params;
	if (!hasLocale(routing.locales, locale)) {
		notFound();
	}

	return (
		<html lang={locale} suppressHydrationWarning>
			<body className={`${geistSans.variable} antialiased`}>
				<ThemeProvider attribute="class" defaultTheme="system" enableSystem>
					<TRPCProvider>
						<NextIntlClientProvider>{children}</NextIntlClientProvider>
					</TRPCProvider>
				</ThemeProvider>
			</body>
		</html>
	);
}
